name: PitchBlack Recovery Project Builder

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'PBRP Manifest Branch'
        required: true
        default: 'android-12.1'
        type: choice
        options:
        - android-14.0
        - android-12.1
        - android-11.0
        - android-10.0
        - android-9.0
        - android-8.1
        - android-7.1
        - android-6.0
      DEVICE_TREE:
        description: 'Custom Recovery Tree URL'
        required: true
        default: 'https://github.com/Romeo13card-sys/android_device_xiaomi_xun-recovery'
      DEVICE_TREE_BRANCH:
        description: 'Device Tree Branch (optional)'
        required: false
        default: ''
      BUILD_TARGET:
        description: 'Build Target (use "pbrp" for Android 11+)'
        required: true
        default: 'pbrp'
        type: choice
        options:
        - pbrp
        - recovery
        - boot
        - vendorboot
      LDCHECK_PATH:
        description: 'Path for dependency check (optional)'
        required: false
        default: 'recovery/root/system/bin/qseecomd'

jobs:
  build:
    name: Build PBRP by ${{ github.actor }}
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      DEBIAN_FRONTEND: noninteractive
      OUTPUT_DIR: ${{ github.workspace }}/out
      DEVICE_NAME: xun
    permissions:
      contents: write
      
    steps:
    - name: Initial Setup
      run: |
        echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(TZ=UTC date +%Y%m%d)" >> $GITHUB_ENV
        
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 24

    - name: Install Repo Tool
      run: |
        sudo apt-get update
        sudo apt-get install -y curl python3
        curl https://storage.googleapis.com/git-repo-downloads/repo | sudo tee /usr/local/bin/repo > /dev/null
        sudo chmod a+x /usr/local/bin/repo

    - name: Check Device Tree Branch
      run: |
        if [ -n "${{ inputs.DEVICE_TREE_BRANCH }}" ]; then
          if ! git ls-remote --exit-code --heads ${{ inputs.DEVICE_TREE }} ${{ inputs.DEVICE_TREE_BRANCH }}; then
            echo "Branch not found, using main"
            echo "DEVICE_TREE_BRANCH=main" >> $GITHUB_ENV
          else
            echo "DEVICE_TREE_BRANCH=${{ inputs.DEVICE_TREE_BRANCH }}" >> $GITHUB_ENV
          fi
        else
          echo "DEVICE_TREE_BRANCH=main" >> $GITHUB_ENV
        fi

    - name: Init Repo
      run: |
        repo init -u https://github.com/PitchBlack-Devices/manifest -b ${{ inputs.MANIFEST_BRANCH }}
        repo sync -c -j$(nproc)

    - name: Clone Device Tree
      run: |
        git clone -b $DEVICE_TREE_BRANCH ${{ inputs.DEVICE_TREE }} device/xiaomi/xun

    - name: Build PitchBlack Recovery
      run: |
        source build/envsetup.sh
        lunch omni_${{ env.DEVICE_NAME }}-${{ inputs.BUILD_TARGET }}
        mka recoveryimage

    - name: Calculate MD5
      run: |
        cd $OUTPUT_DIR
        for f in *.img *.zip; do
          [ -f "$f" ] && echo "$(md5sum "$f" | cut -d ' ' -f1)" > "$f.md5"
        done

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PBRP-Recovery-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: |
          ${{ env.OUTPUT_DIR }}/*.img
          ${{ env.OUTPUT_DIR }}/*.zip
          ${{ env.OUTPUT_DIR }}/*.md5

    - name: Upload to Release
      if: success()
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.OUTPUT_DIR }}/*.img
          ${{ env.OUTPUT_DIR }}/*.zip
        name: PBRP for ${{ env.DEVICE_NAME }} - ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          ## Build Information
          - **Build Date:** ${{ env.BUILD_DATE }}
          - **Branch:** ${{ inputs.MANIFEST_BRANCH }}
          - **Device:** ${{ env.DEVICE_NAME }}
          - **Build Type:** ${{ inputs.BUILD_TARGET }}
          
          ## Source Information
          - **Device Tree:** [${{ inputs.DEVICE_TREE }}](${{ inputs.DEVICE_TREE }}/tree/${{ env.DEVICE_TREE_BRANCH }})
          - **Branch:** ${{ env.DEVICE_TREE_BRANCH }}
          
          ## Build Status
          - Recovery Image MD5: see artifacts
          
          > Note: This is an automated build. Please test thoroughly before using.
        prerelease: false
        draft: false

    - name: Run LDCHECK
      uses: mlm-games/ldcheck-action@main
      with:
        OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
        LDCHECKPATH: ${{ inputs.LDCHECK_PATH }}
      continue-on-error: true

    - name: Calculate Build Time
      if: always()
      run: |
        BUILD_END=$(date +%s)
        BUILD_DURATION=$((BUILD_END - BUILD_START))
        
        hours=$((BUILD_DURATION / 3600))
        minutes=$(((BUILD_DURATION % 3600) / 60))
        seconds=$((BUILD_DURATION % 60))
        
        echo "Build completed in ${hours}h ${minutes}m ${seconds}s"
        echo "BUILD_DURATION=${BUILD_DURATION}" >> $GITHUB_ENV
        echo "BUILD_HOURS=${hours}" >> $GITHUB_ENV
        echo "BUILD_MINUTES=${minutes}" >> $GITHUB_ENV
        echo "BUILD_SECONDS=${seconds}" >> $GITHUB_ENV

    - name: Cleanup Workspace
      if: always()
      run: |
        cd ${{ github.workspace }}
        rm -rf android-recovery
        df -h
